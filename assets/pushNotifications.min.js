/*
 * Push Notifications addon for Bear Framework
 * https://github.com/ivopetkov/push-notifications-bearframework-addon
 * Copyright (c) Ivo Petkov
 * Free to use under the MIT license.
 */
var ivoPetkov=ivoPetkov||{};ivoPetkov.bearFrameworkAddons=ivoPetkov.bearFrameworkAddons||{},ivoPetkov.bearFrameworkAddons.pushNotifications=function(){var n=null,i=null,e=function(n){for(var i=n.length,e=new Uint8Array(i),t=0;t<i;t++)e[t]=n.charCodeAt(t);return e.buffer},t=function(t,s){return"undefined"==typeof Promise?{then:function(n){n({code:"NOT_SUPPORTED",message:"This browser does not support promises (and other notifications related technologies)."})},catch:function(){}}:new Promise(function(o,c){var r=function(n,i,e){var t={code:n,message:i};if(void 0!==e)for(var s in e)t[s]=e[s];o(t)};null!==n&&0!==n.length||r("NO_SUBSCRIBER","No subscriber set on the server!");var u=function(n){void 0===n&&(n=null),r("UNKNOWN",null===n?"Error":"Error (details: "+n+")")};if("serviceWorker"in navigator)var a=window.setInterval(function(){"complete"===document.readyState&&(window.clearInterval(a),navigator.serviceWorker.register(i).then(function(){"showNotification"in ServiceWorkerRegistration.prototype?"denied"!==Notification.permission?"PushManager"in window?navigator.serviceWorker.ready.then(function(i){i.pushManager.getSubscription().then(function(o){var c=function(n){return JSON.stringify(n)},a=function(){clientPackages.get("serverRequests").then(function(t){t.send("ivopetkov-push-notifications-get-vapid",{}).then(function(o){var a,h=JSON.parse(o);i.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:e(atob((a=h.vapidPublicKey,(a+"=".repeat((4-a.length%4)%4)).replace(/\-/g,"+").replace(/_/g,"/"))))}).then(function(i){t.send("ivopetkov-push-notifications-subscribe",{subscription:c(i),channel:void 0!==s.channel?s.channel:null,vapidPublicKey:h.vapidPublicKey,vapidPrivateKey:h.vapidPrivateKey,subscriberKey:n}).then(function(n){var i=JSON.parse(n);void 0!==i.status&&"ok"===i.status?r("SUBSCRIBED","The subscription is OK!",{subscriptionID:i.subscriptionID,channels:i.channels}):u()}).catch(function(n){u(n)})}).catch(function(n){"denied"===Notification.permission?r("DENIED","The user has blocked notifications!"):"default"===Notification.permission?r("NOT_SUBSCRIBED","Not subscribed yet!"):u(n)})}).catch(function(n){u(n)})}).catch(function(n){u(n)})};o?"getStatus"===t?clientPackages.get("serverRequests").then(function(i){i.send("ivopetkov-push-notifications-get",{subscription:c(o),subscriberKey:n}).then(function(n){var i=JSON.parse(n);void 0!==i.status&&"ok"===i.status?null===i.subscriptionID?o.unsubscribe().then(function(){r("NOT_SUBSCRIBED","Not subscribed yet!")}).catch(function(n){u(n)}):r("SUBSCRIBED","The subscription is OK!",{subscriptionID:i.subscriptionID,channels:i.channels}):u()}).catch(function(n){u(n)})}).catch(function(n){u(n)}):"subscribe"===t?clientPackages.get("serverRequests").then(function(i){i.send("ivopetkov-push-notifications-get",{subscription:c(o),subscriberKey:n}).then(function(i){var e=JSON.parse(i);if(void 0!==e.status&&"ok"===e.status){var t=void 0!==s.channel?s.channel:null;null===e.subscriptionID?o.unsubscribe().then(function(){a()}).catch(function(n){u(n)}):null!==t&&-1===e.channels.indexOf(t)?clientPackages.get("serverRequests").then(function(i){i.send("ivopetkov-push-notifications-subscribe",{subscription:c(o),channel:void 0!==s.channel?s.channel:null,subscriberKey:n}).then(function(n){var i=JSON.parse(n);void 0!==i.status&&"ok"===i.status?r("SUBSCRIBED","The subscription is OK!",{subscriptionID:i.subscriptionID,channels:i.channels}):u()}).catch(function(n){u(n)})}).catch(function(n){u(n)}):r("SUBSCRIBED","The subscription is OK!",{subscriptionID:e.subscriptionID,channels:e.channels})}else u()}).catch(function(n){u(n)})}).catch(function(n){u(n)}):"unsubscribe"===t&&clientPackages.get("serverRequests").then(function(i){i.send("ivopetkov-push-notifications-unsubscribe",{subscription:c(o),channel:void 0!==s.channel?s.channel:null,subscriberKey:n}).then(function(n){var i=JSON.parse(n);void 0!==i.status?"ok"===i.status?o.unsubscribe().then(function(n){n?r("UNSUBSCRIBED","Unsubscribe successful!"):u()}).catch(function(n){u(n)}):"keep"===i.status?r("SUBSCRIBED","The subscription is OK!",{subscriptionID:i.subscriptionID,channels:i.channels}):u():u()}).catch(function(n){u(n)})}).catch(function(n){u(n)}):"getStatus"===t?"denied"===Notification.permission?r("DENIED","The user has blocked notifications!"):"default"===Notification.permission||"granted"===Notification.permission?r("NOT_SUBSCRIBED","Not subscribed yet!"):u():"subscribe"===t?a():"unsubscribe"===t&&u()}).catch(function(n){u(n)})}).catch(function(n){u(n)}):r("NOT_SUPPORTED","Push messaging isn't supported in this browser!."):r("DENIED","The user has blocked notifications."):r("NOT_SUPPORTED","Notifications aren't supported in this browser!")}).catch(function(n){u(n)}))},100);else r("NOT_SUPPORTED","Service workers aren't supported in this browser!")})};return{initialize:function(e){void 0!==e[0]&&(n=e[0]),void 0!==e[1]&&(i=e[1])},getStatus:function(){return t("getStatus",{})},subscribe:function(n){return void 0===n&&(n=null),t("subscribe",{channel:n})},unsubscribe:function(n){return void 0===n&&(n=null),t("unsubscribe",{channel:n})}}}();